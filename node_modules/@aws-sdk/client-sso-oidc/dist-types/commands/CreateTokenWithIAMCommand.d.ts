import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { CreateTokenWithIAMRequest, CreateTokenWithIAMResponse } from "../models/models_0";
import { ServiceInputTypes, ServiceOutputTypes, SSOOIDCClientResolvedConfig } from "../SSOOIDCClient";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link CreateTokenWithIAMCommand}.
 */
export interface CreateTokenWithIAMCommandInput extends CreateTokenWithIAMRequest {
}
/**
 * @public
 *
 * The output of {@link CreateTokenWithIAMCommand}.
 */
export interface CreateTokenWithIAMCommandOutput extends CreateTokenWithIAMResponse, __MetadataBearer {
}
declare const CreateTokenWithIAMCommand_base: {
    new (input: CreateTokenWithIAMCommandInput): import("@smithy/smithy-client").CommandImpl<CreateTokenWithIAMCommandInput, CreateTokenWithIAMCommandOutput, SSOOIDCClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: CreateTokenWithIAMCommandInput): import("@smithy/smithy-client").CommandImpl<CreateTokenWithIAMCommandInput, CreateTokenWithIAMCommandOutput, SSOOIDCClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Creates and returns access and refresh tokens for clients and applications that are
 *       authenticated using IAM entities. The access token can be used to fetch short-term credentials
 *       for the assigned Amazon Web Services accounts or to access application APIs using <code>bearer</code>
 *       authentication.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { SSOOIDCClient, CreateTokenWithIAMCommand } from "@aws-sdk/client-sso-oidc"; // ES Modules import
 * / ],
 * // };
 *
 * ```
 *
 * @param CreateTokenWithIAMCommandInput - {@link CreateTokenWithIAMCommandInput}
 * @returns {@link CreateTokenWithIAMCommandOutput}
 * @see {@link CreateTokenWithIAMCommandInput} for command's `input` shape.
 * @see {@link CreateTokenWithIAMCommandOutput} for command's `response` shape.
 * @see {@link SSOOIDCClientResolvedConfig | config} for SSOOIDCClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p>You do not have sufficient access to perform this action.</p>
 *
 * @throws {@link AuthorizationPendingException} (client fault)
 *  <p>Indicates that a request to authorize a client with an access user session token is
 *       pending.</p>
 *
 * @throws {@link ExpiredTokenException} (client fault)
 *  <p>Indicates that the token issued by the service is expired and is no longer valid.</p>
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>Indicates that an error from the service occurred while trying to process a
 *       request.</p>
 *
 * @throws {@link InvalidClientException} (client fault)
 *
 * @throws {@link InvalidGrantException} (client fault)
 *  <p>Indicates that a request contains an invalid grant. This can occur if a client makes a
 *         <a>CreateToken</a> request with an invalid grant type.</p>
 *
 * @throws {@link InvalidRequestException} (client fault)
 *  <p>Indicates that something is wrong with the input to the request. For example, a required
 *       parameter might be missing or out of range.</p>
 *
 * @throws {@link InvalidRequestRegionException} (client fault)
 *  <p>Indicates that a token provided as input to the request was issued by and is only usable
 *       by calling IAM Identity Center endpoints in another region.</p>
 *
 * @throws {@link InvalidScopeException} (client fault)
 *  <p>Indicates that the scope provided in the request is invalid.</p>
 *
 * @throws {@link SlowDownException} (client fault)
 *  <p>Indicates that the client is making the request too frequently and is more than the
 *       service can handle. </p>
 *
 * @throws {@link UnauthorizedClientException} (client fault)
 *  <p>Indicates that the client is not currently authorized to make the request. This can happen
 *
 * @throws {@link UnsupportedGrantTypeException} (client fault)
 *  <p>Indicates that the grant type in the request is not supported by the service.</p>
 *
 * @throws {@link SSOOIDCServiceException}
 * <p>Base exception class for all service exceptions from SSOOIDC service.</p>
 *
 * @public
 * @example Call OAuth/OIDC /token endpoint for Authorization Code grant with IAM authentication
 * ```javascript
 * ```
 *
 * @example Call OAuth/OIDC /token endpoint for Refresh Token grant with IAM authentication
 * ```javascript
 * /
 * ```
 *
 * @example Call OAuth/OIDC /token endpoint for JWT Bearer grant with IAM authentication
 * // example id: create-token-with-iam-for-jwt-bearer
 * ```
 *
 * @example Call OAuth/OIDC /token endpoint for Token Exchange grant with IAM authentication
 * ```javascript
 * //
 */
export declare class CreateTokenWithIAMCommand extends CreateTokenWithIAMCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: CreateTokenWithIAMRequest;
            output: CreateTokenWithIAMResponse;
        };
        sdk: {
            input: CreateTokenWithIAMCommandInput;
            output: CreateTokenWithIAMCommandOutput;
        };
    };
}
